<taskgraph>
<task>
  <name>delay_seconds</name>
  <inFunction>delay_seconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>delay_milliseconds</name>
  <inFunction>delay_milliseconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>delay_microseconds</name>
  <inFunction>delay_microseconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>_safe_memcmp</name>
  <inFunction>_safe_memcmp</inFunction>
</task>
<task>
  <name>_safe_memmove</name>
  <inFunction>_safe_memmove</inFunction>
</task>
<task>
  <name>_safe_memset</name>
  <inFunction>_safe_memset</inFunction>
</task>
<task>
  <name>wait_for_data_and_read</name>
  <inFunction>wait_for_data_and_read</inFunction>
</task>
<task>
  <name>multi_uart_data_ready</name>
  <inFunction>multi_uart_data_ready</inFunction>
</task>
<task>
  <name>read_reg</name>
  <inFunction>read_reg</inFunction>
</task>
<task>
  <name>write_reg</name>
  <inFunction>write_reg</inFunction>
</task>
<task>
  <name>read_reg8_addr16</name>
  <inFunction>read_reg8_addr16</inFunction>
</task>
<task>
  <name>write_reg8_addr16</name>
  <inFunction>write_reg8_addr16</inFunction>
</task>
<task>
  <name>read_reg16</name>
  <inFunction>read_reg16</inFunction>
</task>
<task>
  <name>write_reg16</name>
  <inFunction>write_reg16</inFunction>
</task>
<task>
  <name>read_reg16_addr8</name>
  <inFunction>read_reg16_addr8</inFunction>
</task>
<task>
  <name>write_reg16_addr8</name>
  <inFunction>write_reg16_addr8</inFunction>
</task>
<task>
  <name>mii_get_notification_chanend</name>
  <inFunction>mii_get_notification_chanend</inFunction>
</task>
<task>
  <name>mii_incoming_packet_</name>
  <inFunction>mii_incoming_packet_</inFunction>
</task>
<task>
  <name>mii_get_out_chanend</name>
  <inFunction>mii_get_out_chanend</inFunction>
</task>
<task>
  <name>mii_packet_sent_</name>
  <inFunction>mii_packet_sent_</inFunction>
  <calledFunction>__builtin_chkct</calledFunction>
</task>
<task>
  <name>send_packet</name>
  <inFunction>send_packet</inFunction>
  <endOfSeqCalledFunction>_complete_send_packet</endOfSeqCalledFunction>
</task>
<task>
  <name>send_timed_packet</name>
  <inFunction>send_timed_packet</inFunction>
</task>
<task>
  <name>ethernet_receive_hp_packet</name>
  <inFunction>ethernet_receive_hp_packet</inFunction>
</task>
<task>
  <name>ethernet_send_hp_packet</name>
  <inFunction>ethernet_send_hp_packet</inFunction>
  <endOfSeqCalledFunction>sout_char_array</endOfSeqCalledFunction>
</task>
<task>
  <name>xtcp_complete_send</name>
  <inFunction>xtcp_complete_send</inFunction>
  <calledFunction>xtcp_send</calledFunction>
</task>
<task>
  <name>ar8035_phy_driver</name>
  <inFunction>ar8035_phy_driver</inFunction>
</task>
<task>
  <name>Task_ProduceMotorControlOutputs</name>
  <inFunction>Task_ProduceMotorControlOutputs</inFunction>
</task>
<task>
  <name>main</name>
  <inFunction>main</inFunction>
</task>
<task>
  <name>_task_output_gpio_0</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>output_gpio</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_uart_tx_1</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>uart_tx</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_input_gpio_1bit_with_events_2</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>input_gpio_1bit_with_events</calledFunction>
  <tile>tile[0]</tile>
  <core>u0</core>
  <inPar/>
</task>
<task>
  <name>_task_uart_rx_3</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>uart_rx</calledFunction>
  <tile>tile[0]</tile>
  <core>u0</core>
  <inPar/>
</task>
<task>
  <name>_task_i2c_master_4</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>i2c_master</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_Task_DriveTBLE02S_MotorController_5</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_DriveTBLE02S_MotorController</calledFunction>
  <tile>tile[0]</tile>
  <core>u4</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_SteeringServo_MotorController_6</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_SteeringServo_MotorController</calledFunction>
  <tile>tile[0]</tile>
  <core>u4</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_ControlLightSystem_7</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_ControlLightSystem</calledFunction>
  <tile>tile[0]</tile>
  <core>u7</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_ReadSonarSensors_8</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_ReadSonarSensors</calledFunction>
  <tile>tile[0]</tile>
  <core>3</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_GetRemoteCommandsViaBluetooth_9</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_GetRemoteCommandsViaBluetooth</calledFunction>
  <tile>tile[0]</tile>
  <core>u1</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_MonitorCoresInATile_10</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_MonitorCoresInATile</calledFunction>
  <tile>tile[0]</tile>
  <core>4</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_MonitorCoresInATile_11</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_MonitorCoresInATile</calledFunction>
  <tile>tile[1]</tile>
  <core>5</core>
  <inPar/>
</task>
<task>
  <name>_task_rgmii_ethernet_mac_12</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>rgmii_ethernet_mac</calledFunction>
  <tile>tile[1]</tile>
  <core>6</core>
  <inPar/>
</task>
<task>
  <name>_task_rgmii_ethernet_mac_config_13</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>rgmii_ethernet_mac_config</calledFunction>
  <tile>tile[1]</tile>
  <core>u0</core>
  <inPar/>
</task>
<task>
  <name>_task_ar8035_phy_driver_14</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>ar8035_phy_driver</calledFunction>
  <tile>tile[1]</tile>
  <core>u0</core>
  <inPar/>
</task>
<task>
  <name>_task_smi_15</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>smi</calledFunction>
  <tile>tile[1]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_xtcp_16</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>xtcp</calledFunction>
  <tile>tile[0]</tile>
  <core>8</core>
  <inPar/>
</task>
<task>
  <name>_task_Task_EthernetAppTCPServer_17</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>Task_EthernetAppTCPServer</calledFunction>
  <tile>tile[0]</tile>
  <core>9</core>
  <inPar/>
</task>
<connection>
  <ends>
    <end task="_task_output_gpio_0" type="server"/>
    <end task="_task_uart_tx_1" type="client"/>
  </ends>
    <index>0</index>
  <name>i_gpio_tx</name>
   <interface>output_gpio_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_uart_tx_1" type="server"/>
    <end task="_task_Task_GetRemoteCommandsViaBluetooth_9" type="client"/>
  </ends>
  <name>i_tx</name>
   <interface>uart_tx_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_input_gpio_1bit_with_events_2" type="server"/>
    <end task="_task_uart_rx_3" type="client"/>
  </ends>
  <name>i_gpio_rx</name>
   <interface>input_gpio_if</interface>
   <notification>event</notification>
</connection>
<connection>
  <ends>
    <end task="_task_uart_rx_3" type="server"/>
    <end task="_task_Task_GetRemoteCommandsViaBluetooth_9" type="client"/>
  </ends>
  <name>i_rx</name>
   <interface>uart_rx_if</interface>
   <notification>has_data</notification>
</connection>
<connection>
  <ends>
    <end task="_task_i2c_master_4" type="server"/>
    <end task="_task_Task_ReadSonarSensors_8" type="client"/>
  </ends>
    <index>0</index>
  <name>i2c_client_device_instances</name>
   <interface>i2c_master_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_DriveTBLE02S_MotorController_5" type="server"/>
    <end task="_task_Task_GetRemoteCommandsViaBluetooth_9" type="client"/>
  </ends>
  <name>control_interface</name>
   <interface>control_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_DriveTBLE02S_MotorController_5" type="server"/>
    <end task="_task_Task_ReadSonarSensors_8" type="client"/>
  </ends>
  <name>sensors_interface</name>
   <interface>distancesensor_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_SteeringServo_MotorController_6" type="server"/>
    <end task="_task_Task_GetRemoteCommandsViaBluetooth_9" type="client"/>
  </ends>
  <name>steering_interface</name>
   <interface>steering_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_ControlLightSystem_7" type="server"/>
    <end task="_task_Task_GetRemoteCommandsViaBluetooth_9" type="client"/>
  </ends>
  <name>lightstate_interface</name>
   <interface>lightstate_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_GetRemoteCommandsViaBluetooth_9" type="server"/>
    <end task="_task_Task_EthernetAppTCPServer_17" type="client"/>
  </ends>
  <name>i_cmd_from_ethernet_to_override</name>
   <interface>ethernet_to_cmdparser_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_EthernetAppTCPServer_17" type="server"/>
    <end task="_task_Task_MonitorCoresInATile_10" type="client"/>
  </ends>
  <name>core_stats_interface_tile0</name>
   <interface>core_stats_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_Task_EthernetAppTCPServer_17" type="server"/>
    <end task="_task_Task_MonitorCoresInATile_11" type="client"/>
  </ends>
  <name>core_stats_interface_tile1</name>
   <interface>core_stats_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_rgmii_ethernet_mac_12" type="server"/>
    <end task="_task_xtcp_16" type="client"/>
  </ends>
    <index>0</index>
  <name>i_eth_rx</name>
   <interface>ethernet_rx_if</interface>
   <notification>get_packet</notification>
</connection>
<connection>
  <ends>
    <end task="_task_rgmii_ethernet_mac_12" type="server"/>
    <end task="_task_xtcp_16" type="client"/>
  </ends>
    <index>0</index>
  <name>i_eth_tx</name>
   <interface>ethernet_tx_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_rgmii_ethernet_mac_12" type="schan"/>
    <end task="_task_rgmii_ethernet_mac_config_13" type="schan"/>
  </ends>
  <name>c_rgmii_cfg</name>
</connection>
<connection>
  <ends>
    <end task="_task_rgmii_ethernet_mac_config_13" type="server"/>
    <end task="_task_xtcp_16" type="client"/>
  </ends>
    <index>0</index>
  <name>i_eth_cfg</name>
   <interface>ethernet_cfg_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_rgmii_ethernet_mac_config_13" type="server"/>
    <end task="_task_ar8035_phy_driver_14" type="client"/>
  </ends>
    <index>1</index>
  <name>i_eth_cfg</name>
   <interface>ethernet_cfg_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_smi_15" type="server"/>
    <end task="_task_ar8035_phy_driver_14" type="client"/>
  </ends>
  <name>i_smi</name>
   <interface>smi_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_xtcp_16" type="chan"/>
    <end task="_task_Task_EthernetAppTCPServer_17" type="chan"/>
  </ends>
    <index>0</index>
  <name>c_xtcp</name>
</connection>
</taskgraph>
